// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Categories / CategoryBaseForm with 'errors' property 1`] = `
<Component
  classes={
    Object {
      "cardActions": "Component-cardActions-17",
      "textField": "Component-textField-18",
    }
  }
  description="Across pressure PM food discover recognize. Send letter reach listen. Quickly work plan rule.
Tell lose part purpose do when. Whatever drug contain particularly defense."
  errors={
    Array [
      Object {
        "field": "name",
        "message": "To pole jest wymagane.",
      },
    ]
  }
  name="Apparel"
/>
`;

exports[`Storyshots Categories / CategoryBaseForm with initial data 1`] = `
<Component
  classes={
    Object {
      "cardActions": "Component-cardActions-17",
      "textField": "Component-textField-18",
    }
  }
  description="Across pressure PM food discover recognize. Send letter reach listen. Quickly work plan rule.
Tell lose part purpose do when. Whatever drug contain particularly defense."
  name="Apparel"
/>
`;

exports[`Storyshots Categories / CategoryBaseForm without initial data 1`] = `
<Component
  classes={
    Object {
      "cardActions": "Component-cardActions-17",
      "textField": "Component-textField-18",
    }
  }
/>
`;

exports[`Storyshots Categories / CategoryProducts when loading data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Products"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={true}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(IconButton)
        onClick={[Function]}
      >
        <pure(FilterList) />
      </WithStyles(IconButton)>
    </Hidden>
  </WithStyles(Component)>
  <WithStyles(Component)
    hasNextPage={true}
    hasPreviousPage={false}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / CategoryProducts with initial data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Products"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={true}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(IconButton)
        onClick={[Function]}
      >
        <pure(FilterList) />
      </WithStyles(IconButton)>
    </Hidden>
  </WithStyles(Component)>
  <WithStyles(Component)
    hasNextPage={true}
    hasPreviousPage={false}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
    products={
      Array [
        Object {
          "id": "UHJvZHVjdDox",
          "name": "Gardner, Graham and King",
          "productType": Object {
            "id": "1",
            "name": "T-Shirt",
          },
          "thumbnailUrl": "/media/__sized__/products/saleor/static/placeholders/t-shirts/6_tdo7a5D-crop-c0-5__0-5-255x255-70.jpg",
        },
        Object {
          "id": "UHJvZHVjdDoy",
          "name": "Gardner, Graham and King",
          "productType": Object {
            "id": "1",
            "name": "T-Shirt",
          },
          "thumbnailUrl": "/media/__sized__/products/saleor/static/placeholders/t-shirts/6_tdo7a5D-crop-c0-5__0-5-255x255-70.jpg",
        },
        Object {
          "id": "UHJvZHVjdDoz",
          "name": "Gardner, Graham and King",
          "productType": Object {
            "id": "1",
            "name": "T-Shirt",
          },
          "thumbnailUrl": "/media/__sized__/products/saleor/static/placeholders/t-shirts/6_tdo7a5D-crop-c0-5__0-5-255x255-70.jpg",
        },
        Object {
          "id": "UHJvZHVjdDoa",
          "name": "Gardner, Graham and King",
          "productType": Object {
            "id": "1",
            "name": "T-Shirt",
          },
          "thumbnailUrl": "/media/__sized__/products/saleor/static/placeholders/t-shirts/6_tdo7a5D-crop-c0-5__0-5-255x255-70.jpg",
        },
      ]
    }
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / CategoryProducts without initial data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Products"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
    <Hidden
      implementation="js"
      lgDown={false}
      lgUp={false}
      mdDown={false}
      mdUp={true}
      smDown={false}
      smUp={false}
      xlDown={false}
      xlUp={false}
      xsDown={false}
      xsUp={false}
    >
      <WithStyles(IconButton)
        onClick={[Function]}
      >
        <pure(FilterList) />
      </WithStyles(IconButton)>
    </Hidden>
  </WithStyles(Component)>
  <WithStyles(Component)
    hasNextPage={true}
    hasPreviousPage={false}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
    products={Array []}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / CategorySubcategories when loading data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Subcategories"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
  </WithStyles(Component)>
  <Component
    onClick={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / CategorySubcategories with initial data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Subcategories"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
  </WithStyles(Component)>
  <Component
    categories={
      Array [
        Object {
          "id": "123123",
          "name": "Lorem ipsum dolor",
        },
        Object {
          "id": "876752",
          "name": "Mauris vehicula tortor vulputate",
        },
      ]
    }
    onClick={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / CategorySubcategories without initial data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Subcategories"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
  </WithStyles(Component)>
  <Component
    categories={Array []}
    onClick={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / ProductFilters with initial data 1`] = `
<FilterCard
  handleClear={[Function]}
>
  <TextField
    fullWidth={true}
    label="Name"
    name="name"
    onChange={[Function]}
    required={false}
    select={false}
    value="Lorem ipsum"
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    choices={
      Array [
        Object {
          "label": "Type 1",
          "value": "123123123",
        },
        Object {
          "label": "Type 2",
          "value": "123123124",
        },
        Object {
          "label": "Type 3",
          "value": "123123125",
        },
        Object {
          "label": "Type 4",
          "value": "123123126",
        },
      ]
    }
    label="Product type"
    name="productTypes"
    onChange={[Function]}
    value={
      Array [
        "123123123",
        "123123126",
      ]
    }
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    currencySymbol="USD"
    label="Price"
    name="price"
    onChange={[Function]}
    value={
      Object {
        "max": "50",
        "min": "30",
      }
    }
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    choices={
      Array [
        Object {
          "label": "Published",
          "value": "1",
        },
        Object {
          "label": "Not published",
          "value": "0",
        },
        Object {
          "label": "All",
          "value": "",
        },
      ]
    }
    label="Published"
    name="published"
    onChange={[Function]}
    value="true"
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    choices={
      Array [
        Object {
          "label": "Highlighted",
          "value": "1",
        },
        Object {
          "label": "Not highlighted",
          "value": "0",
        },
        Object {
          "label": "All",
          "value": "",
        },
      ]
    }
    label="Highlighted"
    name="highlighted"
    onChange={[Function]}
    value="false"
  />
</FilterCard>
`;

exports[`Storyshots Categories / ProductFilters without initial data 1`] = `
<FilterCard
  handleClear={[Function]}
>
  <TextField
    fullWidth={true}
    label="Name"
    name="name"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    choices={
      Array [
        Object {
          "label": "Type 1",
          "value": "123123123",
        },
        Object {
          "label": "Type 2",
          "value": "123123124",
        },
        Object {
          "label": "Type 3",
          "value": "123123125",
        },
        Object {
          "label": "Type 4",
          "value": "123123126",
        },
      ]
    }
    label="Product type"
    name="productTypes"
    onChange={[Function]}
    value={Array []}
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    currencySymbol="USD"
    label="Price"
    name="price"
    onChange={[Function]}
    value={
      Object {
        "max": "",
        "min": "",
      }
    }
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    choices={
      Array [
        Object {
          "label": "Published",
          "value": "1",
        },
        Object {
          "label": "Not published",
          "value": "0",
        },
        Object {
          "label": "All",
          "value": "",
        },
      ]
    }
    label="Published"
    name="published"
    onChange={[Function]}
    value=""
  />
  <WithStyles(Component) />
  <WithStyles(Component)
    choices={
      Array [
        Object {
          "label": "Highlighted",
          "value": "1",
        },
        Object {
          "label": "Not highlighted",
          "value": "0",
        },
        Object {
          "label": "All",
          "value": "",
        },
      ]
    }
    label="Highlighted"
    name="highlighted"
    onChange={[Function]}
    value=""
  />
</FilterCard>
`;

exports[`Storyshots Categories / RootCategoryList when loading data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Categories"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
  </WithStyles(Component)>
  <Component
    onClick={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / RootCategoryList with initial data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Categories"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
  </WithStyles(Component)>
  <Component
    categories={
      Array [
        Object {
          "id": "123123",
          "name": "Lorem ipsum dolor",
        },
        Object {
          "id": "876752",
          "name": "Mauris vehicula tortor vulputate",
        },
      ]
    }
    onClick={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Categories / RootCategoryList without initial data 1`] = `
<WithStyles(Card)>
  <WithStyles(Component)
    title="Categories"
  >
    <WithStyles(IconButton)
      onClick={[Function]}
    >
      <pure(Add) />
    </WithStyles(IconButton)>
  </WithStyles(Component)>
  <Component
    categories={Array []}
    onClick={[Function]}
  />
</WithStyles(Card)>
`;

exports[`Storyshots Generics / ErrorMessageCard default 1`] = `
<WithStyles(Card)>
  <WithStyles(CardContent)>
    <WithStyles(Typography)
      component="h2"
      variant="headline"
    >
      Error
    </WithStyles(Typography)>
    <WithStyles(Typography)
      variant="body1"
    >
      Loren ipsum dolor sit amet!
    </WithStyles(Typography)>
  </WithStyles(CardContent)>
</WithStyles(Card)>
`;

exports[`Storyshots Generics / MultiSelectField with error hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  error={true}
  hint="Lorem error"
  onChange={[Function]}
  value={Array []}
/>
`;

exports[`Storyshots Generics / MultiSelectField with hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  hint="Lorem ipsum"
  onChange={[Function]}
  value={Array []}
/>
`;

exports[`Storyshots Generics / MultiSelectField with label 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  label="Lorem ipsum"
  onChange={[Function]}
  value={Array []}
/>
`;

exports[`Storyshots Generics / MultiSelectField with label and hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  hint="Ipsum"
  label="Lorem"
  onChange={[Function]}
  value={Array []}
/>
`;

exports[`Storyshots Generics / MultiSelectField with no value 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  onChange={[Function]}
  value={Array []}
/>
`;

exports[`Storyshots Generics / MultiSelectField with value 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  onChange={[Function]}
  value={
    Array [
      "1",
    ]
  }
/>
`;

exports[`Storyshots Generics / MultiSelectField with value, label and hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "chip": "Component-chip-1",
      "chipContainer": "Component-chipContainer-2",
      "formControl": "Component-formControl-3",
    }
  }
  hint="Ipsum"
  label="Lorem"
  onChange={[Function]}
  value={
    Array [
      "1",
    ]
  }
/>
`;

exports[`Storyshots Generics / PageHeader with title 1`] = `
<Component
  classes={
    Object {
      "action": "Component-action-4",
      "grid": "Component-grid-5",
      "menuButton": "Component-menuButton-6",
      "root": "Component-root-7",
      "subtitle": "Component-subtitle-8",
      "title": "Component-title-9",
    }
  }
  title="Lorem ipsum"
/>
`;

exports[`Storyshots Generics / PageHeader with title and back button 1`] = `
<Component
  classes={
    Object {
      "action": "Component-action-4",
      "grid": "Component-grid-5",
      "menuButton": "Component-menuButton-6",
      "root": "Component-root-7",
      "subtitle": "Component-subtitle-8",
      "title": "Component-title-9",
    }
  }
  onBack={[Function]}
  title="Lorem ipsum"
/>
`;

exports[`Storyshots Generics / PageHeader with title icon bar 1`] = `
<Component
  classes={
    Object {
      "action": "Component-action-4",
      "grid": "Component-grid-5",
      "menuButton": "Component-menuButton-6",
      "root": "Component-root-7",
      "subtitle": "Component-subtitle-8",
      "title": "Component-title-9",
    }
  }
  title="Lorem ipsum"
>
  <WithStyles(IconButton)>
    <pure(Delete) />
  </WithStyles(IconButton)>
</Component>
`;

exports[`Storyshots Generics / PageHeader with title, back button and icon bar 1`] = `
<Component
  classes={
    Object {
      "action": "Component-action-4",
      "grid": "Component-grid-5",
      "menuButton": "Component-menuButton-6",
      "root": "Component-root-7",
      "subtitle": "Component-subtitle-8",
      "title": "Component-title-9",
    }
  }
  onBack={[Function]}
  title="Lorem ipsum"
>
  <WithStyles(IconButton)>
    <pure(Delete) />
  </WithStyles(IconButton)>
</Component>
`;

exports[`Storyshots Generics / PageHeader without title 1`] = `
<Component
  classes={
    Object {
      "action": "Component-action-4",
      "grid": "Component-grid-5",
      "menuButton": "Component-menuButton-6",
      "root": "Component-root-7",
      "subtitle": "Component-subtitle-8",
      "title": "Component-title-9",
    }
  }
/>
`;

exports[`Storyshots Generics / PriceField with hint 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  hint="Lorem ipsum"
  name="price"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / PriceField with label 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  label="Lorem ipsum"
  name="price"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / PriceField with label and hint 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  hint="Ipsum"
  label="Lorem"
  name="price"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / PriceField with no value 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  name="price"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / PriceField with value 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  name="price"
  onChange={[Function]}
  value={
    Object {
      "max": "30",
      "min": "10",
    }
  }
/>
`;

exports[`Storyshots Generics / PriceField with value, label and error 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  error={true}
  hint="Ipsum"
  label="Lorem"
  name="price"
  onChange={[Function]}
  value={
    Object {
      "max": "30",
      "min": "10",
    }
  }
/>
`;

exports[`Storyshots Generics / PriceField with value, label and hint 1`] = `
<Component
  classes={
    Object {
      "inputContainer": "Component-inputContainer-10",
      "pullDown": "Component-pullDown-11",
      "separator": "Component-separator-12",
      "widgetContainer": "Component-widgetContainer-13",
    }
  }
  hint="Ipsum"
  label="Lorem"
  name="price"
  onChange={[Function]}
  value={
    Object {
      "max": "30",
      "min": "10",
    }
  }
/>
`;

exports[`Storyshots Generics / SingleSelectField with error hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  error={true}
  hint="Lorem error"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / SingleSelectField with hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  hint="Lorem ipsum"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / SingleSelectField with label 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  label="Lorem ipsum"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / SingleSelectField with label and hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  hint="Ipsum"
  label="Lorem"
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / SingleSelectField with no value 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  onChange={[Function]}
/>
`;

exports[`Storyshots Generics / SingleSelectField with value 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  onChange={[Function]}
  value="1"
/>
`;

exports[`Storyshots Generics / SingleSelectField with value, label and hint 1`] = `
<Component
  choices={
    Array [
      Object {
        "label": "Apparel",
        "value": "1",
      },
      Object {
        "label": "Groceries",
        "value": "2",
      },
      Object {
        "label": "Books",
        "value": "3",
      },
      Object {
        "label": "Accessories",
        "value": "4",
      },
    ]
  }
  classes={
    Object {
      "formControl": "Component-formControl-14",
    }
  }
  hint="Ipsum"
  label="Lorem"
  onChange={[Function]}
  value="1"
/>
`;

exports[`Storyshots Generics / Skeleton default 1`] = `
<Component
  classes={
    Object {
      "skeleton": "Component-skeleton-15",
    }
  }
  style={
    Object {
      "maxWidth": 300,
    }
  }
/>
`;

exports[`Storyshots Generics / TablePagination both previous and next pages are available 1`] = `
<Table
  classes={
    Object {
      "root": "MuiTable-root-16",
    }
  }
  component="table"
>
  <WithStyles(Component)
    Actions={[Function]}
    colSpan={1}
    component={[Function]}
    hasNextPage={true}
    hasPreviousPage={true}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
  />
</Table>
`;

exports[`Storyshots Generics / TablePagination next page available 1`] = `
<Table
  classes={
    Object {
      "root": "MuiTable-root-16",
    }
  }
  component="table"
>
  <WithStyles(Component)
    Actions={[Function]}
    colSpan={1}
    component={[Function]}
    hasNextPage={true}
    hasPreviousPage={false}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
  />
</Table>
`;

exports[`Storyshots Generics / TablePagination no previous / next page 1`] = `
<Table
  classes={
    Object {
      "root": "MuiTable-root-16",
    }
  }
  component="table"
>
  <WithStyles(Component)
    Actions={[Function]}
    colSpan={1}
    component={[Function]}
    hasNextPage={false}
    hasPreviousPage={false}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
  />
</Table>
`;

exports[`Storyshots Generics / TablePagination previous page available 1`] = `
<Table
  classes={
    Object {
      "root": "MuiTable-root-16",
    }
  }
  component="table"
>
  <WithStyles(Component)
    Actions={[Function]}
    colSpan={1}
    component={[Function]}
    hasNextPage={false}
    hasPreviousPage={true}
    onNextPage={[Function]}
    onPreviousPage={[Function]}
  />
</Table>
`;

exports[`Storyshots Pages / PageBaseForm with 'created' property 1`] = `
<Component
  availableOn="2018-03-20T16:39:08.850105+00:00"
  classes={
    Object {
      "addHelperTextPadding": "Component-addHelperTextPadding-19",
      "cardActions": "Component-cardActions-20",
    }
  }
  content="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin bibendum et justo sit amet viverra. Maecenas euismod auctor nisi et tincidunt. Maecenas ante urna, aliquet at odio sed, gravida efficitur purus. Morbi ut dapibus ante. Nulla eu neque sit amet odio tincidunt porttitor eu quis purus. Aliquam at diam sit amet turpis varius semper vitae non lectus. Vivamus lectus ligula, molestie eu augue eu, cursus tincidunt sem. Nam ornare egestas tincidunt."
  created="2018-03-20T16:39:08.850105+00:00"
  isVisible={true}
  slug="lorem-ipsum-dolor"
  title="Lorem ipsum"
/>
`;

exports[`Storyshots Pages / PageBaseForm with 'errors' property 1`] = `
<Component
  availableOn="2018-03-20T16:39:08.850105+00:00"
  classes={
    Object {
      "addHelperTextPadding": "Component-addHelperTextPadding-19",
      "cardActions": "Component-cardActions-20",
    }
  }
  content="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin bibendum et justo sit amet viverra. Maecenas euismod auctor nisi et tincidunt. Maecenas ante urna, aliquet at odio sed, gravida efficitur purus. Morbi ut dapibus ante. Nulla eu neque sit amet odio tincidunt porttitor eu quis purus. Aliquam at diam sit amet turpis varius semper vitae non lectus. Vivamus lectus ligula, molestie eu augue eu, cursus tincidunt sem. Nam ornare egestas tincidunt."
  errors={
    Array [
      Object {
        "field": "slug",
        "message": "To pole jest wymagane.",
      },
      Object {
        "field": "title",
        "message": "To pole jest wymagane.",
      },
      Object {
        "field": "content",
        "message": "To pole jest wymagane.",
      },
    ]
  }
  isVisible={true}
  slug="lorem-ipsum-dolor"
  title="Lorem ipsum"
/>
`;

exports[`Storyshots Pages / PageBaseForm with initial data 1`] = `
<Component
  availableOn="2018-03-20T16:39:08.850105+00:00"
  classes={
    Object {
      "addHelperTextPadding": "Component-addHelperTextPadding-19",
      "cardActions": "Component-cardActions-20",
    }
  }
  content="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin bibendum et justo sit amet viverra. Maecenas euismod auctor nisi et tincidunt. Maecenas ante urna, aliquet at odio sed, gravida efficitur purus. Morbi ut dapibus ante. Nulla eu neque sit amet odio tincidunt porttitor eu quis purus. Aliquam at diam sit amet turpis varius semper vitae non lectus. Vivamus lectus ligula, molestie eu augue eu, cursus tincidunt sem. Nam ornare egestas tincidunt."
  isVisible={true}
  slug="lorem-ipsum-dolor"
  title="Lorem ipsum"
/>
`;

exports[`Storyshots Pages / PageDeleteDialog default 1`] = `
<Component
  classes={
    Object {
      "deleteButton": "Component-deleteButton-21",
    }
  }
  opened={true}
>
  <WithStyles(DialogContentText)>
    Do you really want to delete this page?
  </WithStyles(DialogContentText)>
</Component>
`;

exports[`Storyshots Pages / PageFilters with initial data 1`] = `
<FilterCard
  handleClear={[Function]}
>
  <TextField
    fullWidth={true}
    label="Title"
    name="title"
    onChange={[Function]}
    required={false}
    select={false}
    value="Initial title"
  />
  <WithStyles(Component) />
  <TextField
    fullWidth={true}
    label="Url"
    name="url"
    onChange={[Function]}
    required={false}
    select={false}
    value="initial-url"
  />
</FilterCard>
`;

exports[`Storyshots Pages / PageFilters without initial data 1`] = `
<FilterCard
  handleClear={[Function]}
>
  <TextField
    fullWidth={true}
    label="Title"
    name="title"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
  <WithStyles(Component) />
  <TextField
    fullWidth={true}
    label="Url"
    name="url"
    onChange={[Function]}
    required={false}
    select={false}
    value=""
  />
</FilterCard>
`;

exports[`Storyshots Pages / PageList when loading data 1`] = `
<Card
  classes={
    Object {
      "root": "MuiCard-root-22",
    }
  }
  raised={false}
>
  <WithStyles(Component)
    handleNextPage={[Function]}
    handlePreviousPage={[Function]}
    onEditClick={[Function]}
    onShowPageClick={[Function]}
    pageInfo={
      Object {
        "endCursor": "YXJyYXljb25uZWN0aW9uOjE=",
        "hasNextPage": false,
        "hasPreviousPage": false,
        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",
      }
    }
  />
</Card>
`;

exports[`Storyshots Pages / PageList with data 1`] = `
<Card
  classes={
    Object {
      "root": "MuiCard-root-22",
    }
  }
  raised={false}
>
  <WithStyles(Component)
    handleNextPage={[Function]}
    handlePreviousPage={[Function]}
    onEditClick={[Function]}
    onShowPageClick={[Function]}
    pageInfo={
      Object {
        "endCursor": "YXJyYXljb25uZWN0aW9uOjE=",
        "hasNextPage": false,
        "hasPreviousPage": false,
        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",
      }
    }
    pages={
      Array [
        Object {
          "cursor": "YXJyYXljb25uZWN0aW9uOjA=",
          "node": Object {
            "id": "UGFnZTox",
            "isVisible": true,
            "slug": "about",
            "title": "About",
          },
        },
        Object {
          "cursor": "YXJyYXljb25uZWN0aW9uOjE=",
          "node": Object {
            "id": "UGFnZToy",
            "isVisible": false,
            "slug": "terms-of-use",
            "title": "Terms of use",
          },
        },
      ]
    }
  />
</Card>
`;

exports[`Storyshots Pages / PageList without data 1`] = `
<Card
  classes={
    Object {
      "root": "MuiCard-root-22",
    }
  }
  raised={false}
>
  <WithStyles(Component)
    handleNextPage={[Function]}
    handlePreviousPage={[Function]}
    onEditClick={[Function]}
    onShowPageClick={[Function]}
    pageInfo={
      Object {
        "endCursor": "YXJyYXljb25uZWN0aW9uOjE=",
        "hasNextPage": false,
        "hasPreviousPage": false,
        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",
      }
    }
    pages={Array []}
  />
</Card>
`;
